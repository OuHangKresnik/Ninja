/**
 * This is the first decision model example.
 */
package ouhang.decisionmodel.model.examples;

import-model ouhang.decisionmodel.model.examples.FirstTemplateModel;

import ouhang.decisionmodel.deriver.FirstDeriver;
import ouhang.decisionmodel.deriver.SecondDeriver;
import ouhang.decisionmodel.data.FirstClass;

inject {
  deriver1 : FirstDeriver;
  deriver2 : SecondDeriver;
}

input {
  field_double : double; 
  field_int : int;
  field_long : long;
  field_float : float;
  field_string : stirng;
  field_boolean : boolean;
  field_class : FirstClass;
}

double signal1 = deriver1.method1(field_double, field_double);
signal1 { log = false; default_value = 0.0d; category = "significant" }

int signal2 = field_class.get();
int signal_int = -1000;
long signal_long = -1000L;
double signal_double = -1000.0d;
float signal_float = -10f;

FirstTemplateModel model = generateModel(
    FirstTemplateModel,
    field_double,
    field_int,
    field_long,
    field_string,
    signal_double);

func double add(double a, double b) {
  return a + b;
}

func void sendMessage(FirstDeriver deriver) {
  deriver.sendMessage();
}

model double subModel {
  sendMessage(deriver1);
  double local_var;
  if (field_booleab) {
    local_var = model.minus(field_double, field_double);
  } elif (field_int > 12) {
    local_var = add(field_double, field_double);
  } else { 
    local_var = deriver2.getDouble();
  }
  return local_var;
}
subModel { default_value = 0.0d; }

// Main Model
model string mainModel {
  if (subModel != 2) {
    return model.getMainModel();
  } else {
    return "DENY";   
  }
}
